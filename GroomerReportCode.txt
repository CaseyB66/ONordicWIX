import wixWindow from 'wix-window';
import wixData from 'wix-data';
import wixSearch from 'wix-search';

let _trailList = []
let _winHt = 0;
let _winWid = 0;

$w.onReady(function () {
	$w('#scrnResltnTxt').hide();
	$w('#hiddenGroomRptLgnd').hide();
	$w('#genCmntText').hide();
	let tbllgndhtml = '<p style="background-color:rgb(230,200,200);color:rgb(0,0,0);border: 2px solid red;\
  border-radius: 8px;padding: 10px;">';
	tbllgndhtml = tbllgndhtml.concat("ClscSet=Classic Tracks Set; Mach=groomer machine used")
	tbllgndhtml = tbllgndhtml.concat("</p>")

	$w('#hiddenGroomRptLgnd').html = tbllgndhtml;

	fillTrailRgnDrpDn();
	console.log("onReady report options length " + $w('#reportOptionsRadio').options.length + "; first " + $w('#reportOptionsRadio').options[0].label);
	let hoursopts = [{ label: "1 Week", value: "168" },
		{ label: "48 Hours", value: "48" },
		{ label: "36 Hours", value: "36" },
		{ label: "24 Hours", value: "24" },
		{ label: "18 Hours", value: "18" },
		{ label: "12 Hours", value: "12" },
		{ label: "8 Hours", value: "8" },
		{ label: "4 Hours", value: "4" }
	];
	$w('#grmRptHours').options = hoursopts;
	let tdy = new Date();
	let dateTxt = tdy.toDateString();
	let htmltxt = '<div style="font-size:18px;">' + dateTxt + '</div>'
	$w('#grmRptDateTxt').html = htmltxt;
	$w('#reportOptionsRadio').options = [{label:"Brief", value:'0'},{label:"All Trails", value:'1'},{label:"Full", value:'2'}]
	$w('#reportOptionsRadio').selectedIndex = 0;
});

function fillTrailRgnDrpDn() {
	wixData.query("skiTrailsTable")
		.limit(20)
		.find()
		.then(results => {
			const rgns = getUniqueTrailRegions(results.items);
			let rgnsOpts = buildOptions(rgns);
			rgnsOpts.push({ label: "All", value: "All" })
			$w('#grmRptTrailRgnDrpDn').options = rgnsOpts;
			$w('#grmRptTrailRgnDrpDn').selectedIndex = rgnsOpts.length - 1;
			fillGrmRptTbl();
		})
}

function getUniqueTrailRegions(items) {
	const rgnOnly = items.map(item => item.trailRegion);
	return [...new Set(rgnOnly)];
}

function buildOptions(uniqueList) {
	return uniqueList.map(curr => {
		// Use the map method to build the options list in the format {label:uniqueTitle, value:uniqueTitle}
		return { label: curr, value: curr };
	});
}

export function grmRptTrailRgnDrpDn_change(event) {
	let vlu = $w('#grmRptTrailRgnDrpDn').value.toString();
	fillGrmRptTbl();
}

function buildGrmRptTable(srtRws) {
	let thisTrail = "";
	let trlrgn = $w('#grmRptTrailRgnDrpDn').value.toString().toUpperCase();
	let ndx = $w('#reportOptionsRadio').selectedIndex;
	console.log("buildGrmRptTable ndx " + ndx);

	let lstRgn = "";
	let fntszfull = "width:100%;font-size:12px";
	let fntszsimple = "width:60%;font-size:18px";
	if (wixWindow.formFactor === "Mobile" || wixWindow.formFactor === "Tablet") {
		if (_winWid > _winHt) {
			fntszfull = "width:100%;font-size:5px";
			fntszsimple = "width:100%;font-size:9px";
		} else {
			fntszfull = "width:100%;font-size:8px";
			fntszsimple = "width:100%;font-size:12px";
		}
	}
	var today = new Date();
	var time_ms = today.getTime();
	let tblsrc = "";
	if (ndx === 2) {
		tblsrc = '<table style="' + fntszfull;
		tblsrc = tblsrc.concat(';overflow-y:auto;background-color:rgb(250,250,250);\
	border: 1px solid black;border-collapse: collapse;">\
  	<tr style="background-color:rgb(250,250,250);border: 1px solid black;border-collapse: collapse;">\
		<th style="text-align: left">Trail Name</th> \
		<th style="text-align: left">Time</th> \
		<th style="text-align: left">ClscSet</th> \
		<th style="text-align: left">Mach</th> \
		<th style="text-align: left">Condition</th> \
		<th style="text-align: left">Comment</th> \
		<th style="text-align: left">Groomer</th> \
  	</tr>');
	} else {
		tblsrc = '<table style="width:60%;margin-left:auto;margin-right:auto;' + fntszsimple;
		tblsrc = tblsrc.concat(';overflow-y:auto;background-color:rgb(250,250,250);\
	border:1px solid black;border-collapse:collapse;"> \
  	<tr style="background-color:rgb(250,250,250);border: 1px solid black;border-collapse: collapse;"> \
		<th style="text-align: left">Trail Name</th> \
		<th style="text-align: left">Time</th> \
		<th style="text-align: left">ClscSet</th> \
		<th style="text-align: left">Groomer</th> \
  	</tr>');
	}
	let rwHtml = ""
	let rgnHtml = ""
	let colorRed = "background-color:rgb(250,0,0)"
	let colorGreen = "background-color:rgb(0,250,0)"
	let colorYellow = "background-color:rgb(200,200,0)"
	if (srtRws.length < 1) {
		tblsrc = tblsrc.concat('<tr style="' + colorRed + ';border: 1px solid black;border-collapse: collapse;">\
			<td colspan="4">No Data!! Try different region or longer duration</td>\
		</tr>');
		tblsrc = tblsrc.concat('</table>');

	} else {
		for (var i = 0; i < srtRws.length; i++) {
			var tdiff = time_ms - srtRws[i]["fullDate"].getTime();
			rgnHtml = ""
			rwHtml = ""
			if ((ndx > 0) && ((trlrgn === "ALL") && (lstRgn !== srtRws[i]["region"]))) {
				rgnHtml = '<tr style="text-align:center;background-color:rgb(255,255,255)">'
				rgnHtml = rwHtml.concat('<td colspan="3" style="text-align:center;background-color:rgb(255,255,255)">' + srtRws[i]["region"] + '</td>')
			}
			console.log("buildGrmRptTable trail: " + srtRws[i]["trailName"] + "(" + thisTrail + ")" + "; ndx: " + ndx + "; priority: " + srtRws[i]["priority"] + "; mach: " + srtRws[i]["groomMachNbr"]);
			if (((ndx === 0) && (srtRws[i]["priority"] === 1) && (thisTrail !== srtRws[i]["trailName"])) ||
				(ndx === 2) ||
				((ndx === 1) && (thisTrail !== srtRws[i]["trailName"]))) {
				console.log("buildGrmRptTable OK: " + srtRws[i]["trailName"]);
				if (tdiff < 15 * 3600000) {
					rwHtml = rwHtml.concat('<tr style="' + colorGreen + ';border: 1px solid black;border-collapse: collapse;">')
				} else if (tdiff < 24 * 3600000) {
					rwHtml = rwHtml.concat('<tr style="' + colorYellow + ';border: 1px solid black;border-collapse: collapse;">')
				} else {
					rwHtml = rwHtml.concat('<tr style="' + colorRed + ';border: 1px solid black;border-collapse: collapse;">')
				}
				rwHtml = rwHtml.concat('<td>' + srtRws[i]["trailName"] + '</td>')
				rwHtml = rwHtml.concat('<td>' + srtRws[i]["groomTime"] + '</td>')
				rwHtml = rwHtml.concat('<td>' + srtRws[i]["classicSet"] + '</td>')
				if (ndx === 2) {
					rwHtml = rwHtml.concat('<td>' + srtRws[i]["groomMach"] + '</td>')
					rwHtml = rwHtml.concat('<td>' + srtRws[i]["trailCondx"] + '</td>')
					rwHtml = rwHtml.concat('<td>' + srtRws[i]["grmrCmnt"] + '</td>')
				}
				rwHtml = rwHtml.concat('<td>' + srtRws[i]["grmr"] + '</td>')
				if (rgnHtml.length > 5) {
					tblsrc = tblsrc.concat(rgnHtml + '</tr>')
				}
				tblsrc = tblsrc.concat(rwHtml + '</tr>')
				// console.log("buildGrmRptTable fullrow "+rwHtml)
			}
			thisTrail = srtRws[i]["trailName"];
			lstRgn = srtRws[i]["region"];
		}
		tblsrc = tblsrc.concat('</table>');
	}
	return tblsrc;
}

async function fillGrmRptTbl() {
	let rptrgn = $w('#grmRptTrailRgnDrpDn').value;
	if (rptrgn.length < 2)
		return;
	var dateStrOpts = {
		month: 'short',
		day: '2-digit',
		hour: '2-digit',
		minute: '2-digit'
	};
	let wininfo = await wixWindow.getBoundingRect();
	_winHt = wininfo.window.height;
	_winWid = wininfo.window.width;
	let tbllgndhtml = '<p style="background-color:rgb(230,200,200);color:rgb(0,0,0);border: 2px solid red;\
  border-radius: 8px;padding: 1px;">';
	tbllgndhtml = tbllgndhtml.concat('<br>Ht: ' + _winHt + '</br>')
	tbllgndhtml = tbllgndhtml.concat('<br>Wid: ' + _winWid + '</br>')
	tbllgndhtml = tbllgndhtml.concat("</p>")
	$w('#scrnResltnTxt').html = tbllgndhtml;
	// $w('#scrnResltnTxt').show();

	var today = new Date();
	var time_ms = today.getTime();
	let hrs = $w('#grmRptHours').value;
	let fltrDate = new Date(time_ms - hrs * 60 * 60000);
	let timStr = ""
	console.log("fillgrmRptTable hours " + hrs + "; filter date " + fltrDate.toLocaleDateString("en-US", dateStrOpts))
	$w('#grmRptTable').html = "";
	let mchfltr = '1';
	if ($w('#reportOptionsRadio').selectedIndex === 2)
		mchfltr = '0'
	try {
		const results = await wixData.query("skiGroomingTable")
			.include("trailRef")
			.include("groomerRef")
			.limit(500)
			.ge("groomDate", fltrDate)
			.ge("groomMachine", mchfltr)
			.find();
		var trlDnItems = results.items;
		let newRws = []
		console.log("fillGrmRptTbl items lgth " + trlDnItems.length + "; first item: " + trlDnItems[1]["trailRegion"])
		for (var j = 0; j < trlDnItems.length; j++) {
			if (trlDnItems[j] === undefined)
				continue;
			if ((rptrgn.toLowerCase() === "all") || (rptrgn === trlDnItems[j]["trailRef"]["trailRegion"])) {
				let machtxt = "None";
				if (trlDnItems[j]["groomMachine"] === '1') {
					machtxt = "Cat"
				}
				if (trlDnItems[j]["groomMachine"] === '3') {
					machtxt = "Cat&Sled"
				}
				if (trlDnItems[j]["groomMachine"] === '2') {
					machtxt = "Sled"
				}
				timStr = trlDnItems[j]["groomDate"].toLocaleDateString("en-US", dateStrOpts);
				newRws.push({
					"trailName": trlDnItems[j]["trailRef"]["title"],
					"fullDate": trlDnItems[j]["groomDate"],
					"groomTime": timStr,
					"classicSet": trlDnItems[j]["classicSet"],
					"groomMachNbr": trlDnItems[j]["groomMachine"],
					"groomMach": machtxt,
					"trailCondx": trlDnItems[j]["trailCondition"],
					"grmrCmnt": trlDnItems[j]["groomerComment"],
					"grmr": trlDnItems[j]["groomerRef"]["title"],
					'region': trlDnItems[j]["trailRef"]["trailRegion"],
					'priority': trlDnItems[j]["trailRef"]["reportPriority"]
				})
			}
		}

		var sortRows = newRws.sort(function (a, b) {
			var rgnA = a.region.toUpperCase();
			var rgnB = b.region.toUpperCase();
			var nameA = a.trailName.toUpperCase(); // ignore upper and lowercase
			var nameB = b.trailName.toUpperCase(); // ignore upper and lowercase
			var dateA = a.fullDate;
			var dateB = b.fullDate;
			if (rgnA < rgnB) {
				return -1;
			}
			if (rgnA > rgnB) {
				return 1;
			}
			if (nameA < nameB) {
				return -1;
			}
			if (nameA > nameB) {
				return 1;
			}
			// name and region must be equal
			if (dateA < dateB) {
				return 1;
			}
			if (dateA > dateB) {
				return -1;
			}
			return 0;
		});
		if (sortRows.length > -1) {
			$w('#grmRptTable').html = buildGrmRptTable(sortRows);
		}
	} catch (err) {
		console.log("fillgrmRptTable caught error " + err)
	}
	try {
		const results = await wixData.query("skiGroomCommentTable")
			.include("groomerRef")
			.limit(100)
			.ge("groomDate", fltrDate)
			.find();
		var cmntItems = results.items;

		var sortCmnt = cmntItems.sort(function (a, b) {
			var dateA = a.groomDate;
			var dateB = b.groomDate;
			if (dateA < dateB) {
				return 1;
			}
			if (dateA > dateB) {
				return -1;
			}
			return 0;
		});

		if ((sortCmnt.length > 0) && (sortCmnt[0]["groomDate"] > fltrDate)) {
			timStr = sortCmnt[0]["groomDate"].toLocaleDateString("en-US", dateStrOpts);
			let cmnthtml = '<p style="background-color:rgb(255,255,255);color:rgb(0,0,0);border: 2px solid green;\
		border-radius: 8px;padding: 10px;font-size:16px">';
			cmnthtml = cmnthtml.concat(timStr+": ");
			cmnthtml = cmnthtml.concat(sortCmnt[0]["title"])
			cmnthtml = cmnthtml.concat("</p>")
			$w('#genCmntText').html = cmnthtml;
			$w('#genCmntText').show();
		} else {
			$w('#genCmntText').html = "";
			$w('#genCmntText').hide();
		}
	} catch (err) {
		console.log("fillgrmRptTable caught error getting general comment" + err)
	}
}

export function grmRptHours_change(event) {
	// This function was added from the Properties & Events panel. To learn more, visit http://wix.to/UcBnC-4
	// Add your code for this event here: 
	fillGrmRptTbl();
}

export function grmRptTable_mouseIn(event) {
	$w('#hiddenGroomRptLgnd').show("fade");
}

export function grmRptTable_mouseOut(event) {
	$w('#hiddenGroomRptLgnd').hide("fade");
}

export function grmRptTable_click(event) {
	if (wixWindow.formFactor === "Mobile" || wixWindow.formFactor === "Tablet") {
		if ($w('#hiddenGroomRptLgnd').hidden) {
			$w('#hiddenGroomRptLgnd').show("fade");
		} else {
			$w('#hiddenGroomRptLgnd').hide("fade");
		}
	}
}

export function scrnResltnTxt_click(event) {
	$w('#scrnResltnTxt').hide();

}

export function reportOptionsRadio_change(event) {
	fillGrmRptTbl();
}

export function hiddenGroomRptLgnd_click(event) {
	$w('#hiddenGroomRptLgnd').hide();
}